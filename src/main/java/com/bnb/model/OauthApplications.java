package com.bnb.model;
// Generated 30 Jul, 2020 3:44:28 PM by Hibernate Tools 5.2.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * OauthApplications generated by hbm2java
 */
@Entity
@Table(name = "oauth_applications", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "uid"))
public class OauthApplications implements java.io.Serializable {

	private long id;
	private String name;
	private String uid;
	private String secret;
	private String redirectUri;
	private String scopes;
	private Date createdAt;
	private Date updatedAt;
	private Set<OauthAccessTokens> oauthAccessTokenses = new HashSet<OauthAccessTokens>(0);
	private Set<OauthAccessGrants> oauthAccessGrantses = new HashSet<OauthAccessGrants>(0);

	public OauthApplications() {
	}

	public OauthApplications(long id, String name, String uid, String secret, String redirectUri, String scopes,
			Date createdAt, Date updatedAt) {
		this.id = id;
		this.name = name;
		this.uid = uid;
		this.secret = secret;
		this.redirectUri = redirectUri;
		this.scopes = scopes;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public OauthApplications(long id, String name, String uid, String secret, String redirectUri, String scopes,
			Date createdAt, Date updatedAt, Set<OauthAccessTokens> oauthAccessTokenses,
			Set<OauthAccessGrants> oauthAccessGrantses) {
		this.id = id;
		this.name = name;
		this.uid = uid;
		this.secret = secret;
		this.redirectUri = redirectUri;
		this.scopes = scopes;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.oauthAccessTokenses = oauthAccessTokenses;
		this.oauthAccessGrantses = oauthAccessGrantses;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "uid", unique = true, nullable = false)
	public String getUid() {
		return this.uid;
	}

	public void setUid(String uid) {
		this.uid = uid;
	}

	@Column(name = "secret", nullable = false)
	public String getSecret() {
		return this.secret;
	}

	public void setSecret(String secret) {
		this.secret = secret;
	}

	@Column(name = "redirect_uri", nullable = false)
	public String getRedirectUri() {
		return this.redirectUri;
	}

	public void setRedirectUri(String redirectUri) {
		this.redirectUri = redirectUri;
	}

	@Column(name = "scopes", nullable = false)
	public String getScopes() {
		return this.scopes;
	}

	public void setScopes(String scopes) {
		this.scopes = scopes;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 29)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 29)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "oauthApplications")
	public Set<OauthAccessTokens> getOauthAccessTokenses() {
		return this.oauthAccessTokenses;
	}

	public void setOauthAccessTokenses(Set<OauthAccessTokens> oauthAccessTokenses) {
		this.oauthAccessTokenses = oauthAccessTokenses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "oauthApplications")
	public Set<OauthAccessGrants> getOauthAccessGrantses() {
		return this.oauthAccessGrantses;
	}

	public void setOauthAccessGrantses(Set<OauthAccessGrants> oauthAccessGrantses) {
		this.oauthAccessGrantses = oauthAccessGrantses;
	}

}
