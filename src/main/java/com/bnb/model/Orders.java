package com.bnb.model;
// Generated 30 Jul, 2020 3:44:28 PM by Hibernate Tools 5.2.10.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "orders", schema = "public")
public class Orders implements java.io.Serializable {

	private long id;
	private Shops shops;
	private UserDeliveryAddresses userDeliveryAddresses;
	private Double amount;
	private Integer itemCount;
	private Long userId;
	private String status;
	private Date createdAt;
	private Date updatedAt;
	private Double deliveryCharge;
	private BigDecimal discountRate;
	private Integer deliverySlot;
	private Integer paymentMode;
	private Integer reason;
	private Integer orderNumber;
	private Double bringChangeOf;
	private Integer walletAmount;
	private Integer refundableAmount;
	private String comments;
	private String reasonType;
	private Date deliveryDate;
	private Long deliveryPersonId;
	private Integer paymentStatus;
	private Boolean notifiedRetailer;
	private Double grossAmount;
	private Double payableAmount;
	private Set<OrderPayments> orderPaymentses = new HashSet<OrderPayments>(0);
	private Set<OrderCharges> orderChargeses = new HashSet<OrderCharges>(0);
	private Set<OrderSpecs> orderSpecses = new HashSet<OrderSpecs>(0);
	private Set<OrderStatusChangeLogs> orderStatusChangeLogses = new HashSet<OrderStatusChangeLogs>(0);
	private Set<UserRatings> userRatingses = new HashSet<UserRatings>(0);
	private Set<RetailerRatings> retailerRatingses = new HashSet<RetailerRatings>(0);
	private Set<Settlements> settlementses = new HashSet<Settlements>(0);
	private Set<OrderItems> orderItemses = new HashSet<OrderItems>(0);

	public Orders() {
	}

	public Orders(long id, Date createdAt, Date updatedAt) {
		this.id = id;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Orders(long id, Shops shops, UserDeliveryAddresses userDeliveryAddresses, Double amount, Integer itemCount,
			Long userId, String status, Date createdAt, Date updatedAt, Double deliveryCharge, BigDecimal discountRate,
			Integer deliverySlot, Integer paymentMode, Integer reason, Integer orderNumber, Double bringChangeOf,
			Integer walletAmount, Integer refundableAmount, String comments, String reasonType, Date deliveryDate,
			Long deliveryPersonId, Integer paymentStatus, Boolean notifiedRetailer, Double grossAmount,
			Double payableAmount, Set<OrderPayments> orderPaymentses, Set<OrderCharges> orderChargeses,
			Set<OrderSpecs> orderSpecses, Set<OrderStatusChangeLogs> orderStatusChangeLogses,
			Set<UserRatings> userRatingses, Set<RetailerRatings> retailerRatingses, Set<Settlements> settlementses,
			Set<OrderItems> orderItemses) {
		this.id = id;
		this.shops = shops;
		this.userDeliveryAddresses = userDeliveryAddresses;
		this.amount = amount;
		this.itemCount = itemCount;
		this.userId = userId;
		this.status = status;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.deliveryCharge = deliveryCharge;
		this.discountRate = discountRate;
		this.deliverySlot = deliverySlot;
		this.paymentMode = paymentMode;
		this.reason = reason;
		this.orderNumber = orderNumber;
		this.bringChangeOf = bringChangeOf;
		this.walletAmount = walletAmount;
		this.refundableAmount = refundableAmount;
		this.comments = comments;
		this.reasonType = reasonType;
		this.deliveryDate = deliveryDate;
		this.deliveryPersonId = deliveryPersonId;
		this.paymentStatus = paymentStatus;
		this.notifiedRetailer = notifiedRetailer;
		this.grossAmount = grossAmount;
		this.payableAmount = payableAmount;
		this.orderPaymentses = orderPaymentses;
		this.orderChargeses = orderChargeses;
		this.orderSpecses = orderSpecses;
		this.orderStatusChangeLogses = orderStatusChangeLogses;
		this.userRatingses = userRatingses;
		this.retailerRatingses = retailerRatingses;
		this.settlementses = settlementses;
		this.orderItemses = orderItemses;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "shop_id")
	public Shops getShops() {
		return this.shops;
	}

	public void setShops(Shops shops) {
		this.shops = shops;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_delivery_address_id")
	public UserDeliveryAddresses getUserDeliveryAddresses() {
		return this.userDeliveryAddresses;
	}

	public void setUserDeliveryAddresses(UserDeliveryAddresses userDeliveryAddresses) {
		this.userDeliveryAddresses = userDeliveryAddresses;
	}

	@Column(name = "amount", precision = 17, scale = 17)
	public Double getAmount() {
		return this.amount;
	}

	public void setAmount(Double amount) {
		this.amount = amount;
	}

	@Column(name = "item_count")
	public Integer getItemCount() {
		return this.itemCount;
	}

	public void setItemCount(Integer itemCount) {
		this.itemCount = itemCount;
	}

	@Column(name = "user_id")
	public Long getUserId() {
		return this.userId;
	}

	public void setUserId(Long userId) {
		this.userId = userId;
	}

	@Column(name = "status")
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 29)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 29)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "delivery_charge", precision = 17, scale = 17)
	public Double getDeliveryCharge() {
		return this.deliveryCharge;
	}

	public void setDeliveryCharge(Double deliveryCharge) {
		this.deliveryCharge = deliveryCharge;
	}

	@Column(name = "discount_rate", precision = 131089, scale = 0)
	public BigDecimal getDiscountRate() {
		return this.discountRate;
	}

	public void setDiscountRate(BigDecimal discountRate) {
		this.discountRate = discountRate;
	}

	@Column(name = "delivery_slot")
	public Integer getDeliverySlot() {
		return this.deliverySlot;
	}

	public void setDeliverySlot(Integer deliverySlot) {
		this.deliverySlot = deliverySlot;
	}

	@Column(name = "payment_mode")
	public Integer getPaymentMode() {
		return this.paymentMode;
	}

	public void setPaymentMode(Integer paymentMode) {
		this.paymentMode = paymentMode;
	}

	@Column(name = "reason")
	public Integer getReason() {
		return this.reason;
	}

	public void setReason(Integer reason) {
		this.reason = reason;
	}

	@Column(name = "order_number")
	public Integer getOrderNumber() {
		return this.orderNumber;
	}

	public void setOrderNumber(Integer orderNumber) {
		this.orderNumber = orderNumber;
	}

	@Column(name = "bring_change_of", precision = 17, scale = 17)
	public Double getBringChangeOf() {
		return this.bringChangeOf;
	}

	public void setBringChangeOf(Double bringChangeOf) {
		this.bringChangeOf = bringChangeOf;
	}

	@Column(name = "wallet_amount")
	public Integer getWalletAmount() {
		return this.walletAmount;
	}

	public void setWalletAmount(Integer walletAmount) {
		this.walletAmount = walletAmount;
	}

	@Column(name = "refundable_amount")
	public Integer getRefundableAmount() {
		return this.refundableAmount;
	}

	public void setRefundableAmount(Integer refundableAmount) {
		this.refundableAmount = refundableAmount;
	}

	@Column(name = "comments")
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@Column(name = "reason_type")
	public String getReasonType() {
		return this.reasonType;
	}

	public void setReasonType(String reasonType) {
		this.reasonType = reasonType;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "delivery_date", length = 13)
	public Date getDeliveryDate() {
		return this.deliveryDate;
	}

	public void setDeliveryDate(Date deliveryDate) {
		this.deliveryDate = deliveryDate;
	}

	@Column(name = "delivery_person_id")
	public Long getDeliveryPersonId() {
		return this.deliveryPersonId;
	}

	public void setDeliveryPersonId(Long deliveryPersonId) {
		this.deliveryPersonId = deliveryPersonId;
	}

	@Column(name = "payment_status")
	public Integer getPaymentStatus() {
		return this.paymentStatus;
	}

	public void setPaymentStatus(Integer paymentStatus) {
		this.paymentStatus = paymentStatus;
	}

	@Column(name = "notified_retailer")
	public Boolean getNotifiedRetailer() {
		return this.notifiedRetailer;
	}

	public void setNotifiedRetailer(Boolean notifiedRetailer) {
		this.notifiedRetailer = notifiedRetailer;
	}

	@Column(name = "gross_amount", precision = 17, scale = 17)
	public Double getGrossAmount() {
		return this.grossAmount;
	}

	public void setGrossAmount(Double grossAmount) {
		this.grossAmount = grossAmount;
	}

	@Column(name = "payable_amount", precision = 17, scale = 17)
	public Double getPayableAmount() {
		return this.payableAmount;
	}

	public void setPayableAmount(Double payableAmount) {
		this.payableAmount = payableAmount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<OrderPayments> getOrderPaymentses() {
		return this.orderPaymentses;
	}

	public void setOrderPaymentses(Set<OrderPayments> orderPaymentses) {
		this.orderPaymentses = orderPaymentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<OrderCharges> getOrderChargeses() {
		return this.orderChargeses;
	}

	public void setOrderChargeses(Set<OrderCharges> orderChargeses) {
		this.orderChargeses = orderChargeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<OrderSpecs> getOrderSpecses() {
		return this.orderSpecses;
	}

	public void setOrderSpecses(Set<OrderSpecs> orderSpecses) {
		this.orderSpecses = orderSpecses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<OrderStatusChangeLogs> getOrderStatusChangeLogses() {
		return this.orderStatusChangeLogses;
	}

	public void setOrderStatusChangeLogses(Set<OrderStatusChangeLogs> orderStatusChangeLogses) {
		this.orderStatusChangeLogses = orderStatusChangeLogses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<UserRatings> getUserRatingses() {
		return this.userRatingses;
	}

	public void setUserRatingses(Set<UserRatings> userRatingses) {
		this.userRatingses = userRatingses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<RetailerRatings> getRetailerRatingses() {
		return this.retailerRatingses;
	}

	public void setRetailerRatingses(Set<RetailerRatings> retailerRatingses) {
		this.retailerRatingses = retailerRatingses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<Settlements> getSettlementses() {
		return this.settlementses;
	}

	public void setSettlementses(Set<Settlements> settlementses) {
		this.settlementses = settlementses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<OrderItems> getOrderItemses() {
		return this.orderItemses;
	}

	public void setOrderItemses(Set<OrderItems> orderItemses) {
		this.orderItemses = orderItemses;
	}

}
