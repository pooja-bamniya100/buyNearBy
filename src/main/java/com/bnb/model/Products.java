package com.bnb.model;
// Generated 30 Jul, 2020 3:44:28 PM by Hibernate Tools 5.2.10.Final

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Products generated by hbm2java
 */
@Entity
@Table(name = "products", schema = "public")
public class Products implements java.io.Serializable {

	private long id;
	private Brands brands;
	private Categories categories;
	private SubCategories subCategories;
	private String name;
	private Date createdAt;
	private Date updatedAt;
	private Double size;
	private String unit;
	private Serializable alternateNames;
	private Double popularity;
	private String image;
	private Boolean isDeleted;
	private Date deletedAt;
	private Set<OrderItems> orderItemses = new HashSet<OrderItems>(0);
	private Set<ProductSubstitutes> productSubstituteses = new HashSet<ProductSubstitutes>(0);
	private Set<ProductSizes> productSizeses = new HashSet<ProductSizes>(0);

	public Products() {
	}

	public Products(long id, Date createdAt, Date updatedAt) {
		this.id = id;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Products(long id, Brands brands, Categories categories, SubCategories subCategories, String name,
			Date createdAt, Date updatedAt, Double size, String unit, Serializable alternateNames, Double popularity,
			String image, Boolean isDeleted, Date deletedAt, Set<OrderItems> orderItemses,
			Set<ProductSubstitutes> productSubstituteses, Set<ProductSizes> productSizeses) {
		this.id = id;
		this.brands = brands;
		this.categories = categories;
		this.subCategories = subCategories;
		this.name = name;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.size = size;
		this.unit = unit;
		this.alternateNames = alternateNames;
		this.popularity = popularity;
		this.image = image;
		this.isDeleted = isDeleted;
		this.deletedAt = deletedAt;
		this.orderItemses = orderItemses;
		this.productSubstituteses = productSubstituteses;
		this.productSizeses = productSizeses;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "brand_id")
	public Brands getBrands() {
		return this.brands;
	}

	public void setBrands(Brands brands) {
		this.brands = brands;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id")
	public Categories getCategories() {
		return this.categories;
	}

	public void setCategories(Categories categories) {
		this.categories = categories;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sub_category_id")
	public SubCategories getSubCategories() {
		return this.subCategories;
	}

	public void setSubCategories(SubCategories subCategories) {
		this.subCategories = subCategories;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 29)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 29)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "size", precision = 17, scale = 17)
	public Double getSize() {
		return this.size;
	}

	public void setSize(Double size) {
		this.size = size;
	}

	@Column(name = "unit")
	public String getUnit() {
		return this.unit;
	}

	public void setUnit(String unit) {
		this.unit = unit;
	}

	@Column(name = "alternate_names")
	public Serializable getAlternateNames() {
		return this.alternateNames;
	}

	public void setAlternateNames(Serializable alternateNames) {
		this.alternateNames = alternateNames;
	}

	@Column(name = "popularity", precision = 17, scale = 17)
	public Double getPopularity() {
		return this.popularity;
	}

	public void setPopularity(Double popularity) {
		this.popularity = popularity;
	}

	@Column(name = "image")
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Column(name = "is_deleted")
	public Boolean getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deleted_at", length = 29)
	public Date getDeletedAt() {
		return this.deletedAt;
	}

	public void setDeletedAt(Date deletedAt) {
		this.deletedAt = deletedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<OrderItems> getOrderItemses() {
		return this.orderItemses;
	}

	public void setOrderItemses(Set<OrderItems> orderItemses) {
		this.orderItemses = orderItemses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<ProductSubstitutes> getProductSubstituteses() {
		return this.productSubstituteses;
	}

	public void setProductSubstituteses(Set<ProductSubstitutes> productSubstituteses) {
		this.productSubstituteses = productSubstituteses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<ProductSizes> getProductSizeses() {
		return this.productSizeses;
	}

	public void setProductSizeses(Set<ProductSizes> productSizeses) {
		this.productSizeses = productSizeses;
	}

}
